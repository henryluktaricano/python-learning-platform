"""
Hard-coded mappings for exercises based on the Mappings.txt file.
"""
import os

# Base path to the exercises directory
EXERCISES_BASE_PATH = "/Users/henry/Desktop/Learning/Projects/Python Learn/exercises"

# Chapter 1 mappings
CHAPTER1_MAPPINGS = {
    "01_object_types": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/01_object_types.json"),
    "02_numbers": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/02_numbers.json"),
    "03_variables": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/03_variables.json"),
    "04_strings_part1": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/04_strings_part1.json"),
    "04_strings_part2": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/04_strings_part2.json"),
    "05_string_immutability": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/05_string_immutability.json"),
    "05_string_concatenation": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/05_string_concatenation.json"),
    "05_string_methods_capitalize": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/05_string_methods_capitalize.json"),
    "05_string_methods_lower": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/05_string_methods_lower.json"),
    "05_string_methods_split": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/05_string_methods_split.json"),
    "05_string_methods_upper": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/05_string_methods_upper.json"),
    "06_string_formatting": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/06_string_formatting.json"),
    "07_lists_creating": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/07_lists_creating.json"),
    "07_lists_concatenation": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/07_lists_concatenation.json"),
    "07_lists_indexing": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/07_lists_indexing.json"),
    "07_lists_slicing": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/07_lists_slicing.json"),
    "07_lists_length": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/07_lists_length.json"),
    "07_lists_mixed": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/07_lists_mixed.json"),
    "07_lists_modifying": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/07_lists_modifying.json"),
    "08_list_methods_append": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/08_list_methods_append.json"),
    "08_list_methods_pop": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/08_list_methods_pop.json"),
    "08_list_methods_reverse": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/08_list_methods_reverse.json"),
    "08_list_methods_sort": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/08_list_methods_sort.json"),
    "09_dictionaries_access": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/09_dictionaries_access.json"),
    "09_dictionaries_method_notes": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/09_dictionaries_method_notes.json"),
    "09_dictionaries_methods_behaviors": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/09_dictionaries_methods_behaviors.json"),
    "09_dictionaries_nested": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/09_dictionaries_nested.json"),
    "09_dictionaries_value_types": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/09_dictionaries_value_types.json"),
    "09_dictionaries_working_with_values": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/09_dictionaries_working_with_values.json"),
    "10_dictionary_methods_items": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/10_dictionary_methods_items.json"),
    "10_dictionary_methods_keys": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/10_dictionary_methods_keys.json"),
    "10_dictionary_methods_values": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/10_dictionary_methods_values.json"),
    "11_tuples_basics": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/11_tuples_basics.json"),
    "11_tuples_count": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/11_tuples_count.json"),
    "11_tuples_index": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/11_tuples_index.json"),
    "11_tuples_examples": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/11_tuples_examples.json"),
    "11_tuples_use_cases": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/11_tuples_use_cases.json"),
    "12_sets_syntax": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/12_sets_syntax.json"),
    "12_sets_order": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/12_sets_order.json"),
    "12_sets_add": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/12_sets_add.json"),
    "12_sets_uniqueness": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/12_sets_uniqueness.json"),
    "13_file_opening_closing": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/13_file_opening_closing.json"),
    "13_file_reading": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/13_file_reading.json"),
    "13_file_writing": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/13_file_writing.json"),
    "13_file_modes": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/13_file_modes.json"),
    "14_with_statement_basic": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/14_with_statement_basic.json"),
    "14_with_statement_advanced": os.path.join(EXERCISES_BASE_PATH, "Chapter1_DataObjects/14_with_statement_advanced.json"),
}

# Chapter 2 mappings
CHAPTER2_MAPPINGS = {
    "01_comparison_operators": os.path.join(EXERCISES_BASE_PATH, "Chapter2_Operators/01_comparison_operators.json"),
    "02_logical_operators": os.path.join(EXERCISES_BASE_PATH, "Chapter2_Operators/02_logical_operators.json"),
}

# Chapter 3 mappings
CHAPTER3_MAPPINGS = {
    "01_if_else_basics": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/01_if_else_basics.json"),
    "01_if_elif_else_chains": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/01_if_elif_else_chains.json"),
    "01_complex_conditionals": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/01_complex_conditionals.json"),
    "02_basic_for_loops": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/02_basic_for_loops.json"),
    "02_for_loops_conditionals": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/02_for_loops_conditionals.json"),
    "02_for_loops_data_types": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/02_for_loops_data_types.json"),
    "02_for_loops_dictionaries": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/02_for_loops_dictionaries.json"),
    "02_for_loops_tuple_unpacking": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/02_for_loops_tuple_unpacking.json"),
    "03_basic_while_loops": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/03_basic_while_loops.json"),
    "03_control_statements": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/03_control_statements.json"),
    "03_while_loop_examples": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/03_while_loop_examples.json"),
    "04_enumerate_operator": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/04_enumerate_operator.json"),
    "04_in_operator": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/04_in_operator.json"),
    "04_input_functions": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/04_input_functions.json"),
    "04_min_max_operators": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/04_min_max_operators.json"),
    "04_random_functions": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/04_random_functions.json"),
    "04_range_operator": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/04_range_operator.json"),
    "04_zip_operator": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/04_zip_operator.json"),
    "05_list_comprehensions": os.path.join(EXERCISES_BASE_PATH, "Chapter3_Statements/05_list_comprehensions.json"),
}

# Chapter 4 mappings
CHAPTER4_MAPPINGS = {
    "01_documentation_help": os.path.join(EXERCISES_BASE_PATH, "Chapter4_MethodsFunctions/01_documentation_help.json"),
    "02_functions_def_keyword": os.path.join(EXERCISES_BASE_PATH, "Chapter4_MethodsFunctions/02_functions_def_keyword.json"),
    "03_functions_with_logic": os.path.join(EXERCISES_BASE_PATH, "Chapter4_MethodsFunctions/03_functions_with_logic.json"),
    "04_tuple_unpacking": os.path.join(EXERCISES_BASE_PATH, "Chapter4_MethodsFunctions/04_tuple_unpacking.json"),
    "05_nested_functions": os.path.join(EXERCISES_BASE_PATH, "Chapter4_MethodsFunctions/05_nested_functions.json"),
    "06_args_kwargs": os.path.join(EXERCISES_BASE_PATH, "Chapter4_MethodsFunctions/06_args_kwargs.json"),
}

# Combined mapping of all topics
ALL_TOPIC_MAPPINGS = {
    **CHAPTER1_MAPPINGS,
    **CHAPTER2_MAPPINGS,
    **CHAPTER3_MAPPINGS,
    **CHAPTER4_MAPPINGS,
}

# Chapter titles
CHAPTER_TITLES = {
    "Chapter1_DataObjects": "Chapter 1: Data Objects",
    "Chapter2_Operators": "Chapter 2: Operators",
    "Chapter3_Statements": "Chapter 3: Statements",
    "Chapter4_MethodsFunctions": "Chapter 4: Methods & Functions",
}

# Topic titles mapped to their file IDs
TOPIC_TITLES = {
    "01_object_types": "Object Types",
    "02_numbers": "Numbers",
    "03_variables": "Variables",
    "04_strings_part1": "Strings 1",
    "04_strings_part2": "Strings 2",
    "05_string_immutability": "String Immutability",
    "05_string_concatenation": "String Concatenation",
    "05_string_methods_capitalize": "String Methods Capitalize",
    "05_string_methods_lower": "String Methods Lower",
    "05_string_methods_split": "String Methods Split",
    "05_string_methods_upper": "String Methods Upper",
    "06_string_formatting": "String Formatting",
    "07_lists_creating": "Lists Creating",
    "07_lists_concatenation": "Lists Concatenation",
    "07_lists_indexing": "Lists Indexing",
    "07_lists_slicing": "Lists Slicing",
    "07_lists_length": "Lists Length",
    "07_lists_mixed": "Lists Mixed",
    "07_lists_modifying": "Lists Modifying",
    "08_list_methods_append": "List Method Append",
    "08_list_methods_pop": "List Method Pop",
    "08_list_methods_reverse": "List Method Reverse",
    "08_list_methods_sort": "List Method Sort",
    "09_dictionaries_access": "Dictionaries Access",
    "09_dictionaries_method_notes": "Dictionaries Method Notes",
    "09_dictionaries_methods_behaviors": "Dictionaries Methods Behaviors",
    "09_dictionaries_nested": "Dictionaries Nested",
    "09_dictionaries_value_types": "Dictionaries Value Types",
    "09_dictionaries_working_with_values": "Dictionaries Working With Values",
    "10_dictionary_methods_items": "Dictionary Methods Items",
    "10_dictionary_methods_keys": "Dictionary Methods Keys",
    "10_dictionary_methods_values": "Dictionary Methods Values",
    "11_tuples_basics": "Tuples Basics",
    "11_tuples_count": "Tuples Count",
    "11_tuples_index": "Tuples Index",
    "11_tuples_examples": "Tuples Examples",
    "11_tuples_use_cases": "Tuples Use Cases",
    "12_sets_syntax": "Sets Syntax",
    "12_sets_order": "Sets Order",
    "12_sets_add": "Sets Add",
    "12_sets_uniqueness": "Sets Uniqueness",
    "13_file_opening_closing": "File Opening Closing",
    "13_file_reading": "File Reading",
    "13_file_writing": "File Writing",
    "13_file_modes": "File Modes",
    "14_with_statement_basic": "With Statement Basic",
    "14_with_statement_advanced": "With Statement Advanced",
    "01_comparison_operators": "Comparison Operators",
    "02_logical_operators": "Logical Operators",
    "01_if_else_basics": "If Statements Basics",
    "01_if_elif_else_chains": "If Statements with Elif",
    "01_complex_conditionals": "If Statements Complex",
    "02_basic_for_loops": "For Loops Basics",
    "02_for_loops_conditionals": "For Loops with Conditionals",
    "02_for_loops_data_types": "For Loops with Different Data Types",
    "02_for_loops_dictionaries": "For Loops with Dictionaries",
    "02_for_loops_tuple_unpacking": "For Loops with Tuple Unpacking",
    "03_basic_while_loops": "While Loops Basics",
    "03_control_statements": "While Loops Control Statements",
    "03_while_loop_examples": "While Loops Examples",
    "04_enumerate_operator": "Enumerate Operator",
    "04_in_operator": "In Operator",
    "04_input_functions": "Input Functions",
    "04_min_max_operators": "Min Max Operators",
    "04_random_functions": "Random Functions",
    "04_range_operator": "Range Function",
    "04_zip_operator": "Zip Operator",
    "05_list_comprehensions": "List Comprehensions",
    "01_documentation_help": "Documentation",
    "02_functions_def_keyword": "Def Keyword",
    "03_functions_with_logic": "Functions with Logic",
    "04_tuple_unpacking": "Tuple Unpacking",
    "05_nested_functions": "Nested Functions",
    "06_args_kwargs": "Args and Kwargs",
} 