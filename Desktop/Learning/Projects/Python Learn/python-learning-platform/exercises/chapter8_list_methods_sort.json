[
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 1,
    "difficulty": "beginner",
    "exercise": "numbers = [3, 1, 4, 2]. Use the sort() method to arrange these numbers in ascending order. Print the sorted list."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 2,
    "difficulty": "beginner",
    "exercise": "fruits = ['orange', 'apple', 'banana']. Use sort() to arrange these fruits alphabetically. Print the sorted list."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 3,
    "difficulty": "beginner",
    "exercise": "letters = ['d', 'a', 'c', 'b']. Sort the list and print it. Then check what happens if you try to store the result in a variable (e.g., result = letters.sort()). Print the value of result."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 4,
    "difficulty": "beginner",
    "exercise": "mixed_case = ['Apple', 'banana', 'Cherry']. Use sort() to sort this list. Print the result and observe the sorting order."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 5,
    "difficulty": "beginner",
    "exercise": "numbers = [10, 5, 30, 15, 25]. Sort this list and print it. Then create a copy of the original list and sort that instead. Print both lists."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 6,
    "difficulty": "beginner",
    "exercise": "words = ['dog', 'cat', 'elephant', 'ant']. Sort this list based on the alphabetical order and print it."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 7,
    "difficulty": "beginner",
    "exercise": "decimals = [3.14, 1.0, 2.5, 0.5]. Use sort() to arrange these numbers in ascending order. Print the sorted list."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 8,
    "difficulty": "intermediate",
    "exercise": "values = [5, -2, 0, 10, -5]. Sort this list of positive and negative numbers. Print the sorted list."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 9,
    "difficulty": "intermediate",
    "exercise": "temperatures = [98.6, 97.5, 99.2, 98.1]. Sort these temperature values and then find the median temperature (middle value or average of two middle values if even length). Print both the sorted list and the median."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 10,
    "difficulty": "intermediate",
    "exercise": "words = ['apple', 'Banana', 'cherry', 'Date']. Use sort() with the reverse=True parameter to sort in descending order. Print the result."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 11,
    "difficulty": "intermediate",
    "exercise": "numbers = [100, 25, 3, 40, 5]. Sort this list in descending order using the reverse parameter. Print the sorted list."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 12,
    "difficulty": "intermediate",
    "exercise": "cities = ['New York', 'london', 'PARIS', 'Sydney']. Convert all cities to lowercase first, then sort the list. Print the result."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 13,
    "difficulty": "intermediate",
    "exercise": "mixed = [10, 'apple', 20, 'banana']. Try to use sort() on this list and observe what happens. Handle any errors and explain why they occur."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 14,
    "difficulty": "intermediate",
    "exercise": "strings_with_numbers = ['item10', 'item2', 'item1']. Sort this list and observe the result. Explain why the sorting might not match numerical order."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 15,
    "difficulty": "advanced",
    "exercise": "words_by_length = ['short', 'medium', 'very long', 'tiny']. Create a new list containing the lengths of each word. Sort the original list based on these lengths. Print both lists."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 16,
    "difficulty": "advanced",
    "exercise": "data = [('Alice', 25), ('Bob', 20), ('Charlie', 30)]. Try to sort this list of tuples. Observe and explain what criterion is used for sorting."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 17,
    "difficulty": "advanced",
    "exercise": "nested = [[3, 2], [1, 5], [2, 4]]. Sort this list of lists and print the result. Observe and explain how nested lists are sorted."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 18,
    "difficulty": "advanced",
    "exercise": "records = [{'name': 'Alice', 'age': 25}, {'name': 'Bob', 'age': 20}]. Try to sort this list of dictionaries. Handle any errors and explain what would be needed to sort such a structure."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 19,
    "difficulty": "advanced",
    "exercise": "words = ['Z', 'a', 'Y', 'b']. Sort this list with the default behavior, then sort it again with the key=str.lower parameter to make it case-insensitive. Compare the results."
  },
  {
    "notebook": "8_list_methods.ipynb",
    "chapter_index": "List sort() Method",
    "exercise_number": 20,
    "difficulty": "advanced",
    "exercise": "numbers_as_strings = ['10', '2', '1', '20']. Sort this list and observe the result. Then try to convert all elements to integers, sort the list, and convert back to strings. Compare the results."
  }
] 