[
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 1,
    "difficulty": "beginner",
    "exercise": "numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Extract and print the first three elements using slicing."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 2,
    "difficulty": "beginner",
    "exercise": "fruits = ['apple', 'banana', 'cherry', 'date', 'elderberry']. Extract and print the last three elements using slicing."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 3,
    "difficulty": "beginner",
    "exercise": "colors = ['red', 'orange', 'yellow', 'green', 'blue', 'indigo', 'violet']. Extract and print the middle three colors using slicing."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 4,
    "difficulty": "beginner",
    "exercise": "letters = ['a', 'b', 'c', 'd', 'e', 'f']. Extract and print all elements from index 2 onwards."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 5,
    "difficulty": "beginner",
    "exercise": "values = [10, 20, 30, 40, 50, 60]. Extract and print all elements up to (but not including) index 4."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 6,
    "difficulty": "beginner",
    "exercise": "names = ['Alice', 'Bob', 'Charlie', 'David', 'Eve']. Extract and print the entire list using slicing syntax."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 7,
    "difficulty": "intermediate",
    "exercise": "digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]. Extract and print every second element using slicing with a step."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 8,
    "difficulty": "intermediate",
    "exercise": "countdown = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1]. Use slicing to reverse the list and print the result."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 9,
    "difficulty": "intermediate",
    "exercise": "weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']. Extract and print only the weekdays (Monday to Friday) using slicing."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 10,
    "difficulty": "intermediate",
    "exercise": "data = [5, 10, 15, 20, 25, 30, 35, 40]. Extract and print every third element starting from the first element using slicing."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 11,
    "difficulty": "intermediate",
    "exercise": "sequence = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Use negative indices in your slice to extract the last five elements."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 12,
    "difficulty": "intermediate",
    "exercise": "chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h']. Use slicing to create a new list that contains the original list in reverse order."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 13,
    "difficulty": "intermediate",
    "exercise": "mixed = [1, 2, 3, 'a', 'b', 'c', True, False]. Use slicing to separate the numbers, strings, and booleans into three different lists."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 14,
    "difficulty": "advanced",
    "exercise": "grid = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]. Use slicing to extract the second row and then use another slice to extract the last two elements of that row."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 15,
    "difficulty": "advanced",
    "exercise": "numbers = list(range(1, 21)). Use slicing to create three equal-sized lists containing the first third, middle third, and last third of the original list."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 16,
    "difficulty": "advanced",
    "exercise": "text = ['P', 'y', 't', 'h', 'o', 'n', ' ', 'i', 's', ' ', 'f', 'u', 'n']. Use slicing to extract and join the characters to form the complete string."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 17,
    "difficulty": "advanced",
    "exercise": "values = [10, 20, 30, 40, 50, 60, 70, 80, 90]. Write a loop that prints all possible slices of length 3 from this list."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 18,
    "difficulty": "advanced",
    "exercise": "data = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]. Create a new list that contains the first element from each inner list using slicing and a loop."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 19,
    "difficulty": "advanced",
    "exercise": "long_list = list(range(50)). Extract the middle 10 elements, regardless of the list's length. Ensure your solution would work even if the list size changes."
  },
  {
    "notebook": "7_lists.ipynb",
    "chapter_index": "List Slicing",
    "exercise_number": 20,
    "difficulty": "advanced",
    "exercise": "numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]. Create a new list where the first half is in ascending order and the second half is in descending order using slicing."
  }
] 