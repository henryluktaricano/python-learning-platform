[
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 1,
    "difficulty": "intermediate",
    "exercise": "Write a function that checks if a given year is a leap year. The rules are: it's a leap year if divisible by 4, except if it's divisible by 100 unless it's also divisible by 400. Use nested if-else statements to implement this logic."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 2,
    "difficulty": "intermediate",
    "exercise": "Create a program that asks for a username and password. Use conditional statements to check if the username is valid (not empty and at least 3 characters) AND the password is strong (at least 8 characters, contains a digit and an uppercase letter)."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 3,
    "difficulty": "intermediate",
    "exercise": "Write a function that determines if a triangle is valid based on three side lengths. A valid triangle's sides must satisfy: a + b > c, a + c > b, and b + c > a. Use conditional statements to implement this check."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 4,
    "difficulty": "intermediate",
    "exercise": "Create a program that categorizes a day's weather based on temperature and precipitation. Use nested conditionals to categorize as 'Hot and Dry', 'Hot and Rainy', 'Cold and Dry', or 'Cold and Rainy'."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 5,
    "difficulty": "advanced",
    "exercise": "Create a password validator function that checks multiple conditions. The function should verify that a password: 1) is at least 8 characters long, 2) contains at least one uppercase letter, 3) contains at least one digit, and 4) doesn't contain the username. Use multiple if statements and logical operators."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 6,
    "difficulty": "advanced",
    "exercise": "Write a program that simulates a rock-paper-scissors game between the user and computer. Use conditional statements to determine the winner, and keep track of the score in a file that's updated after each game."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 7,
    "difficulty": "advanced",
    "exercise": "Create a function that takes a list of numbers and uses nested conditionals to categorize the list as 'all positive', 'all negative', 'mixed', or 'contains zero'. Also report if the list is empty or has only one element."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 8,
    "difficulty": "advanced",
    "exercise": "Write a function that checks if a word is in a list of valid words. If it's not found, the function should find words that start with the same letter and are of similar length (within 2 characters difference) as potential suggestions. Use string methods and conditionals to implement this."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 9,
    "difficulty": "advanced",
    "exercise": "Create a program that reads a text file containing student records (one per line in format 'name:grade') and uses complex conditionals to generate a report of students who: achieved A grades (90-100), B grades (80-89), C grades (70-79), or failing grades (below 70)."
  },
  {
    "notebook": "1_If_Elif_Else.ipynb",
    "chapter_index": "Conditional Statements - Complex Conditionals",
    "exercise_number": 10,
    "difficulty": "advanced",
    "exercise": "Write a program that implements a simple state machine for a vending machine using conditionals. It should track states like 'waiting for coins', 'selecting product', 'dispensing', and 'error', and handle transitions between these states."
  }
] 