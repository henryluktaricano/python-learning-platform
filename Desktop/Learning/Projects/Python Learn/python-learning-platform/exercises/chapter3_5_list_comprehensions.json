[
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 1,
    "difficulty": "beginner",
    "exercise": "Use a list comprehension to create a list of the first 10 numbers (0-9)."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 2,
    "difficulty": "beginner",
    "exercise": "Convert the string 'python' into a list of its characters using a list comprehension."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 3,
    "difficulty": "beginner",
    "exercise": "Create a list comprehension that generates the squares of numbers from 1 to 10."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 4,
    "difficulty": "beginner",
    "exercise": "Use a list comprehension to create a list of even numbers from 0 to 20."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 5,
    "difficulty": "beginner",
    "exercise": "Convert a list of Celsius temperatures [0, 10, 20, 30, 40] to Fahrenheit using a list comprehension."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 6,
    "difficulty": "beginner",
    "exercise": "Create a list of the first 10 odd numbers using a list comprehension."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 7,
    "difficulty": "beginner",
    "exercise": "Use a list comprehension to create a list of the first letters of each word in the sentence 'Python is great for list comprehensions'."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 8,
    "difficulty": "beginner",
    "exercise": "Create a list of numbers from 1 to 10 where each number is divided by 2 using a list comprehension."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 9,
    "difficulty": "beginner",
    "exercise": "Use a list comprehension to filter out strings that have fewer than 5 characters from a list of words."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 10,
    "difficulty": "beginner",
    "exercise": "Create a list comprehension that doubles each number in the range 1 to 5."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 11,
    "difficulty": "intermediate",
    "exercise": "Use a list comprehension with an if-else statement to create a list where even numbers are kept as is and odd numbers are replaced with the string 'odd'."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 12,
    "difficulty": "intermediate",
    "exercise": "Create a list comprehension that generates a list of tuples (number, square) for numbers 1 through 5."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 13,
    "difficulty": "intermediate",
    "exercise": "Use a list comprehension to filter out numbers not divisible by 3 from the range 1 to 30."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 14,
    "difficulty": "intermediate",
    "exercise": "Create a list of uppercase versions of each word in a list of strings using a list comprehension."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 15,
    "difficulty": "intermediate",
    "exercise": "Use a list comprehension to create a list of the lengths of each word in the sentence 'List comprehensions are a powerful feature in Python'."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 16,
    "difficulty": "intermediate",
    "exercise": "Create a nested list comprehension that flattens a list of lists into a single list."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 17,
    "difficulty": "intermediate",
    "exercise": "Use a list comprehension to create a list of the common elements between two lists."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 18,
    "difficulty": "intermediate",
    "exercise": "Create a list comprehension that generates a list of numbers from 1 to 100 that are divisible by both 2 and 5."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 19,
    "difficulty": "intermediate",
    "exercise": "Use a list comprehension with the enumerate() function to create a list of tuples containing (index, value) for each element in a list."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 20,
    "difficulty": "intermediate",
    "exercise": "Create a list comprehension that filters out empty strings from a list of strings."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 21,
    "difficulty": "advanced",
    "exercise": "Use a nested list comprehension to create a list of all pairs (x, y) where x ranges from 1 to 3 and y ranges from 1 to 3."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 22,
    "difficulty": "advanced",
    "exercise": "Create a list comprehension that generates the first 10 Fibonacci numbers."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 23,
    "difficulty": "advanced",
    "exercise": "Use a list comprehension to transpose a matrix (list of lists) from rows to columns."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 24,
    "difficulty": "advanced",
    "exercise": "Create a list comprehension that converts a list of temperatures in different units (a mix of 'C' and 'F' suffixes) to a consistent Celsius list."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 25,
    "difficulty": "advanced",
    "exercise": "Use a list comprehension to find all prime numbers between 1 and 50."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 26,
    "difficulty": "advanced",
    "exercise": "Create a list comprehension that generates a Pascal's triangle row given the previous row."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 27,
    "difficulty": "advanced",
    "exercise": "Use a list comprehension with zip() to combine two lists into a list of tuples."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 28,
    "difficulty": "advanced",
    "exercise": "Create a list comprehension that generates the cartesian product of two lists (all possible pairs of elements)."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 29,
    "difficulty": "advanced",
    "exercise": "Use a list comprehension to implement a simple version of the map() function that applies a given function to each element of a list."
  },
  {
    "notebook": "5_List_Comprehensions.ipynb",
    "chapter_index": "List Comprehensions",
    "exercise_number": 30,
    "difficulty": "advanced",
    "exercise": "Create a list comprehension that implements a basic word frequency counter for a given text string."
  }
] 