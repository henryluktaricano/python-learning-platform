[
  {
    "notebook": "12_sets.ipynb",
    "chapter_index": "Sets - Unordered Property",
    "exercise_number": 1,
    "difficulty": "beginner",
    "exercise": "Create a set with the elements 1, 2, 3, 4, 5. Print the set. Create another set with the same elements but in a different order: 5, 4, 3, 2, 1. Print this set too. Compare the two sets and explain what you observe about their ordering."
  },
  {
    "notebook": "12_sets.ipynb",
    "chapter_index": "Sets - Unordered Property",
    "exercise_number": 2,
    "difficulty": "intermediate",
    "exercise": "Create a set with the elements 'a', 'b', 'c', 'd'. Write a loop that adds these elements to a new empty set one at a time. Print the set after each addition. Does the order in which elements appear in the set match the order in which you added them?"
  },
  {
    "notebook": "12_sets.ipynb",
    "chapter_index": "Sets - Unordered Property",
    "exercise_number": 3,
    "difficulty": "intermediate",
    "exercise": "Create a set with integers from 1 to 10. Write code to try to access the 'first' or 'last' element of the set. What happens and why? Compare this behavior with a list containing the same elements."
  },
  {
    "notebook": "12_sets.ipynb",
    "chapter_index": "Sets - Unordered Property",
    "exercise_number": 4,
    "difficulty": "advanced",
    "exercise": "Create two sets: set1 = {1, 2, 3, 4, 5} and set2 = {5, 4, 3, 2, 1}. Check if these sets are equal using the == operator. Explain why or why not, considering the unordered nature of sets."
  },
  {
    "notebook": "12_sets.ipynb",
    "chapter_index": "Sets - Unordered Property",
    "exercise_number": 5,
    "difficulty": "advanced",
    "exercise": "Write a function that takes a list as input and creates two sets from it: one by adding elements from the beginning of the list, and another by adding elements from the end of the list. Compare and print these two sets. Explain the results in terms of the ordered/unordered nature of sets."
  }
] 