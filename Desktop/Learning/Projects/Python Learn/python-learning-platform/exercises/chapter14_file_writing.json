[
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 1,
    "difficulty": "beginner",
    "exercise": "Open a file named 'greeting.txt' in write mode, write the string 'Hello, World!' to it, and then close the file."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 2,
    "difficulty": "beginner",
    "exercise": "Open a file named 'lines.txt' in write mode. Write three separate lines of text using the write() method with the '\\n' character. Close the file after writing."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 3,
    "difficulty": "beginner",
    "exercise": "Create a file called 'numbers.txt' and write the numbers 1 through 5 to it, with each number on a new line. Remember to convert numbers to strings before writing."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 4,
    "difficulty": "beginner",
    "exercise": "Write a program that asks the user for their name and then writes a personalized greeting to a file called 'welcome.txt'."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 5,
    "difficulty": "intermediate",
    "exercise": "Open a file named 'append_example.txt' in append mode and add a new line of text to it. If the file doesn't exist, it will be created. Verify that appending preserves the existing content."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 6,
    "difficulty": "intermediate",
    "exercise": "Create a function that takes a filename and a list of strings as parameters, then writes each string in the list to the file on a separate line."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 7,
    "difficulty": "intermediate",
    "exercise": "Write a program that continually asks the user for input and writes each input to a file called 'log.txt', until the user enters 'quit'. Use the with statement to ensure the file is properly closed."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 8,
    "difficulty": "intermediate",
    "exercise": "Create a dictionary with some key-value pairs. Write a program that writes each key-value pair to a file called 'dict_data.txt' in the format 'key: value', with one pair per line."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 9,
    "difficulty": "advanced",
    "exercise": "Write a function that takes a filename and a 2D list (list of lists) as parameters, then writes the data to a CSV-like format where each inner list is a row and values are separated by commas."
  },
  {
    "notebook": "14_File_Handling.ipynb",
    "chapter_index": "File Handling - Writing",
    "exercise_number": 10,
    "difficulty": "advanced",
    "exercise": "Create a program that generates a simple HTML file. Write HTML tags and content to a file called 'webpage.html' that includes a title, heading, and a paragraph of text."
  }
] 