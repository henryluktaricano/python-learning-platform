[
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 1,
    "difficulty": "beginner",
    "exercise": "Create two variables: x = 5 and y = 10. Use the 'and' operator to check if x is greater than 0 AND y is less than 20. Print the result."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 2,
    "difficulty": "beginner",
    "exercise": "Create a variable age = 25 and another variable has_license = True. Use the 'and' operator to determine if someone is both over 18 AND has a license. Print a message saying whether they can drive or not."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 3,
    "difficulty": "beginner",
    "exercise": "Create two variables: rainy = True and cold = False. Use the 'or' operator to determine if it's either rainy OR cold outside. Print an appropriate message about the weather."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 4,
    "difficulty": "beginner",
    "exercise": "Create a variable is_weekend = False. Use the 'not' operator to invert this value and print a message about whether it's a weekday or weekend."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 5,
    "difficulty": "intermediate",
    "exercise": "Write a function that takes a temperature value and checks if it's a comfortable temperature. Define comfortable as between 65 and 75 degrees (inclusive). Use logical operators to check both the lower and upper bounds."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 6,
    "difficulty": "intermediate",
    "exercise": "Create a program that determines if a year is a leap year. A leap year is divisible by 4, BUT not divisible by 100 unless it's also divisible by 400. Use logical operators to implement this rule and test it with different years."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 7,
    "difficulty": "intermediate",
    "exercise": "Write a function that checks if a password is strong. Define a strong password as one that's at least 8 characters long AND contains at least one uppercase letter AND at least one number. Test the function with different passwords."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 8,
    "difficulty": "intermediate",
    "exercise": "Demonstrate short-circuit evaluation with the 'and' and 'or' operators. Create expressions where the second part isn't evaluated because the first part determines the result. Use print statements to show which parts are evaluated."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 9,
    "difficulty": "advanced",
    "exercise": "Create a function that validates form data. The function should check multiple conditions (e.g., username length, valid email format, password strength) and return appropriate error messages using logical operators to combine validation rules."
  },
  {
    "notebook": "2_Logical_Operators.ipynb",
    "chapter_index": "Logical Operators",
    "exercise_number": 10,
    "difficulty": "advanced",
    "exercise": "Implement a simplified boolean algebra calculator that takes a string expression like 'True and (False or not True)' and evaluates it to return the correct boolean result. You'll need to parse the expression and apply logical operators in the correct order."
  }
] 