[
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 1,
    "difficulty": "beginner",
    "exercise": "Write a program that implements the while loop example from the notebook: a counter that prints its value and increments until it reaches 5, then prints a message in the else clause."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 2,
    "difficulty": "beginner",
    "exercise": "Recreate the continue example from the notebook: loop through a string 'Henry' and skip printing the letter 'e' using continue."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 3,
    "difficulty": "beginner",
    "exercise": "Implement the break example from the notebook: a while loop that prints numbers from 0 to 2, then breaks when x equals 3."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 4,
    "difficulty": "beginner",
    "exercise": "Create an example using the pass statement to create an empty loop that does nothing but avoids syntax errors."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 5,
    "difficulty": "intermediate",
    "exercise": "Write a program that combines while loops with user input: keep asking for a password until the user enters 'python123'."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 6,
    "difficulty": "intermediate",
    "exercise": "Create a program that uses a while loop and a counter to simulate a coin flip (alternating between 'heads' and 'tails') until a specified number of flips have been made."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 7,
    "difficulty": "intermediate",
    "exercise": "Implement a program that uses a while loop with both continue and break statements to process a list of numbers, skipping negatives and stopping at zero."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 8,
    "difficulty": "advanced",
    "exercise": "Create a simple text-based menu system using a while loop that offers options to: 1) Add a name to a list, 2) Remove a name, 3) Show all names, 4) Exit. Use break to exit the program."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 9,
    "difficulty": "advanced",
    "exercise": "Write a program where you choose a number and the user tries to guess it. Use a while loop to give 'higher' or 'lower' hints until they guess correctly."
  },
  {
    "notebook": "3_While_Loops.ipynb",
    "chapter_index": "While Loops - Examples",
    "exercise_number": 10,
    "difficulty": "advanced",
    "exercise": "Implement a simple banking system using a while loop that lets the user check balance, deposit, withdraw, or exit. Use appropriate control statements to handle each operation."
  }
] 